#Login 
az login 
az account set --subscription "MCAPS-Hybrid-REQ-53546-2023-haduong"
#Set up the variable
$AKS_RESOURCE_GROUP="k8s-tech-brief-rg"
$LOCATION="eastus"
$VM_SKU="Standard_D2as_v5"
$AKS_NAME="ktb-aks"
$NODE_COUNT="3"
$ACR_NAME="mcapshybridreq535462023haduong"
echo $LOCATION

#Create a resource group
az group create --name $AKS_RESOURCE_GROUP --location $LOCATION

#Create a basic AKS cluster
az aks create --resource-group $AKS_RESOURCE_GROUP --name $AKS_NAME --node-count $NODE_COUNT --enable-addons monitoring --generate-ssh-keys --node-vm-size $VM_SKU

#Connect to the cluster
#


#Get node
kubectl get nodes
#Interactive witht the pods
kubectl get pods -o wide
kubectl exec -it nginx-pod -- /bin/bash

#Local pods command
#printenv | sort
#curl http://workload-svc:8100


#Stop the cluster
az aks stop --resource-group $AKS_RESOURCE_GROUP --name $AKS_NAME

#Restart the cluster

az aks start --name $AKS_NAME --resource-group $AKS_RESOURCE_GROUP


##Install cluster info 
helm repo add scubakiz https://scubakiz.github.io/clusterinfo/
helm repo update
helm install clusterinfo scubakiz/clusterinfo
  #kubectl port-forward svc/clusterinfo 5252:5252 -n clusterinfo

  #helm uninstall clusterinfo



#Install Nginx Ingress Controller
helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
helm repo update
helm install nginx-ingress ingress-nginx/ingress-nginx `
--namespace ingress-nginx --create-namespace `
--set controller.nodeSelector."kubernetes\.io/os"=linux `
--set defaultBackend.nodeSelector."kubernetes\.io/os"=linux
#kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.7.0/deploy/static/provider/cloud/deploy.yaml

#helm uninstall nginx-ingress --namespace default
#kubectl --namespace ingress-nginx get services -o wide -w nginx-ingress-ingress-nginx-controller
kubectl get svc -n ingress-nginx -o=custom-columns=NAME:.metadata.name,TYPE:.spec.type,IP:.status.loadBalancer.ingress[0].ip

#Install Secret Store CSI Driver
az aks enable-addons --addons azure-keyvault-secrets-provider `
--name $AKS_NAME `
--resource-group $AKS_RESOURCE_GROUP

#Install Vertical pod autoscaler
helm repo add fairwinds-stable https://charts.fairwinds.com/stable
helm repo udpate
helm install vpa fairwinds-stable/vpa `
--namespace vpa --create-namespace `
--set admissionController.enabled=false `
--set recommender.enabled=true `
--set updater.enabled=false
helm install goldilocks --namespace vpa fairwinds-stable/goldilocks

##Install Keda

helm repo add kedacore https://kedacore.github.io/charts
helm repo update
helm install keda kedacore/keda --create-namespace --namespace keda

#Get the cluster
az aks show --resource-group $AKS_RESOURCE_GROUP --name $AKS_NAME 
#Delete cluster
#az aks delete --resource-group $AKS_RESOURCE_GROUP --name $AKS_NAME
#az group delete --name $AKS_RESOURCE_GROUP --yes

#Get log from pod
kubectl logs -n ingress-nginx nginx-ingress-ingress-nginx-controller-58ff69979c-9cmw6
#Get heatlh  
kubectl get --raw='/healthz?verbose'